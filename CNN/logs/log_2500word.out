My first sbatch script!
Load data...
Adjusting sequence length for actual size
x_train shape: (2250, 2552)
x_test shape: (250, 2552)
Vocabulary Size: 17768
Model type is CNN-rand
2022-01-05 07:02:05.781687: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-01-05 07:02:06.440700: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 15397 MB memory:  -> device: 0, name: Tesla P100-PCIE-16GB, pci bus id: 0000:d8:00.0, compute capability: 6.0
Model: "model"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to                     
==================================================================================================
 input_1 (InputLayer)           [(None, 2552)]       0           []                               
                                                                                                  
 embedding (Embedding)          (None, 2552, 50)     888400      ['input_1[0][0]']                
                                                                                                  
 dropout (Dropout)              (None, 2552, 50)     0           ['embedding[0][0]']              
                                                                                                  
 conv1d (Conv1D)                (None, 2550, 10)     1510        ['dropout[0][0]']                
                                                                                                  
 conv1d_1 (Conv1D)              (None, 2545, 10)     4010        ['dropout[0][0]']                
                                                                                                  
 max_pooling1d (MaxPooling1D)   (None, 1275, 10)     0           ['conv1d[0][0]']                 
                                                                                                  
 max_pooling1d_1 (MaxPooling1D)  (None, 1272, 10)    0           ['conv1d_1[0][0]']               
                                                                                                  
 flatten (Flatten)              (None, 12750)        0           ['max_pooling1d[0][0]']          
                                                                                                  
 flatten_1 (Flatten)            (None, 12720)        0           ['max_pooling1d_1[0][0]']        
                                                                                                  
 concatenate (Concatenate)      (None, 25470)        0           ['flatten[0][0]',                
                                                                  'flatten_1[0][0]']              
                                                                                                  
 dropout_1 (Dropout)            (None, 25470)        0           ['concatenate[0][0]']            
                                                                                                  
 dense (Dense)                  (None, 50)           1273550     ['dropout_1[0][0]']              
                                                                                                  
 dense_1 (Dense)                (None, 10)           510         ['dense[0][0]']                  
                                                                                                  
==================================================================================================
Total params: 2,167,980
Trainable params: 2,167,980
Non-trainable params: 0
__________________________________________________________________________________________________
Epoch 1/10
2022-01-05 07:02:08.061194: I tensorflow/stream_executor/cuda/cuda_dnn.cc:366] Loaded cuDNN version 8200

Epoch 00001: val_categorical_accuracy improved from -inf to 0.22400, saving model to ./model/best
2022-01-05 07:02:13.861619: W tensorflow/python/util/util.cc:368] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
36/36 - 8s - loss: 2.2007 - categorical_accuracy: 0.2089 - val_loss: 2.2256 - val_categorical_accuracy: 0.2240 - 8s/epoch - 214ms/step
Epoch 2/10

Epoch 00002: val_categorical_accuracy improved from 0.22400 to 0.23200, saving model to ./model/best
36/36 - 3s - loss: 2.1666 - categorical_accuracy: 0.2040 - val_loss: 2.2099 - val_categorical_accuracy: 0.2320 - 3s/epoch - 84ms/step
Epoch 3/10

Epoch 00003: val_categorical_accuracy did not improve from 0.23200
36/36 - 1s - loss: 2.1493 - categorical_accuracy: 0.2107 - val_loss: 2.1820 - val_categorical_accuracy: 0.2200 - 1s/epoch - 32ms/step
Epoch 4/10

Epoch 00004: val_categorical_accuracy did not improve from 0.23200
36/36 - 1s - loss: 2.1357 - categorical_accuracy: 0.2204 - val_loss: 2.1979 - val_categorical_accuracy: 0.2160 - 1s/epoch - 30ms/step
Epoch 5/10

Epoch 00005: val_categorical_accuracy did not improve from 0.23200
36/36 - 1s - loss: 2.1156 - categorical_accuracy: 0.2227 - val_loss: 2.1825 - val_categorical_accuracy: 0.2160 - 1s/epoch - 31ms/step
Epoch 6/10

Epoch 00006: val_categorical_accuracy did not improve from 0.23200
36/36 - 1s - loss: 2.0903 - categorical_accuracy: 0.2360 - val_loss: 2.1650 - val_categorical_accuracy: 0.2200 - 1s/epoch - 30ms/step
Epoch 7/10

Epoch 00007: val_categorical_accuracy did not improve from 0.23200
36/36 - 1s - loss: 2.0457 - categorical_accuracy: 0.2489 - val_loss: 2.1555 - val_categorical_accuracy: 0.2160 - 1s/epoch - 33ms/step
Epoch 8/10

Epoch 00008: val_categorical_accuracy did not improve from 0.23200
36/36 - 1s - loss: 1.9997 - categorical_accuracy: 0.2693 - val_loss: 2.1421 - val_categorical_accuracy: 0.2200 - 1s/epoch - 30ms/step
Epoch 9/10

Epoch 00009: val_categorical_accuracy did not improve from 0.23200
36/36 - 1s - loss: 1.9473 - categorical_accuracy: 0.2920 - val_loss: 2.1447 - val_categorical_accuracy: 0.2160 - 1s/epoch - 30ms/step
Epoch 10/10

Epoch 00010: val_categorical_accuracy improved from 0.23200 to 0.23600, saving model to ./model/best
36/36 - 2s - loss: 1.8752 - categorical_accuracy: 0.3147 - val_loss: 2.1349 - val_categorical_accuracy: 0.2360 - 2s/epoch - 62ms/step
