My first sbatch script!
Load data...
Adjusting sequence length for actual size
x_train shape: (71998, 4627)
x_test shape: (8000, 4627)
Vocabulary Size: 100804
Model type is CNN-rand
2022-01-05 10:53:48.947927: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-01-05 10:54:37.542212: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 15397 MB memory:  -> device: 0, name: Tesla P100-PCIE-16GB, pci bus id: 0000:d8:00.0, compute capability: 6.0
Model: "model"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to                     
==================================================================================================
 input_1 (InputLayer)           [(None, 4627)]       0           []                               
                                                                                                  
 embedding (Embedding)          (None, 4627, 50)     5040200     ['input_1[0][0]']                
                                                                                                  
 dropout (Dropout)              (None, 4627, 50)     0           ['embedding[0][0]']              
                                                                                                  
 conv1d (Conv1D)                (None, 4625, 10)     1510        ['dropout[0][0]']                
                                                                                                  
 conv1d_1 (Conv1D)              (None, 4620, 10)     4010        ['dropout[0][0]']                
                                                                                                  
 max_pooling1d (MaxPooling1D)   (None, 2312, 10)     0           ['conv1d[0][0]']                 
                                                                                                  
 max_pooling1d_1 (MaxPooling1D)  (None, 2310, 10)    0           ['conv1d_1[0][0]']               
                                                                                                  
 flatten (Flatten)              (None, 23120)        0           ['max_pooling1d[0][0]']          
                                                                                                  
 flatten_1 (Flatten)            (None, 23100)        0           ['max_pooling1d_1[0][0]']        
                                                                                                  
 concatenate (Concatenate)      (None, 46220)        0           ['flatten[0][0]',                
                                                                  'flatten_1[0][0]']              
                                                                                                  
 dropout_1 (Dropout)            (None, 46220)        0           ['concatenate[0][0]']            
                                                                                                  
 dense (Dense)                  (None, 50)           2311050     ['dropout_1[0][0]']              
                                                                                                  
 dense_1 (Dense)                (None, 10)           510         ['dense[0][0]']                  
                                                                                                  
==================================================================================================
Total params: 7,357,280
Trainable params: 7,357,280
Non-trainable params: 0
__________________________________________________________________________________________________
Epoch 1/10
2022-01-05 10:58:43.406040: I tensorflow/stream_executor/cuda/cuda_dnn.cc:366] Loaded cuDNN version 8200

Epoch 00001: val_categorical_accuracy improved from -inf to 0.18225, saving model to ./model/best
2022-01-05 11:04:39.540316: W tensorflow/python/util/util.cc:368] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
1125/1125 - 379s - loss: 2.2133 - categorical_accuracy: 0.1773 - val_loss: 2.2205 - val_categorical_accuracy: 0.1822 - 379s/epoch - 337ms/step
Epoch 2/10

Epoch 00002: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 257s - loss: 2.2021 - categorical_accuracy: 0.1816 - val_loss: 2.2109 - val_categorical_accuracy: 0.1821 - 257s/epoch - 228ms/step
Epoch 3/10

Epoch 00003: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 247s - loss: 2.1904 - categorical_accuracy: 0.1815 - val_loss: 2.2065 - val_categorical_accuracy: 0.1822 - 247s/epoch - 220ms/step
Epoch 4/10

Epoch 00004: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 212s - loss: 2.1776 - categorical_accuracy: 0.1826 - val_loss: 2.2113 - val_categorical_accuracy: 0.1810 - 212s/epoch - 189ms/step
Epoch 5/10

Epoch 00005: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 183s - loss: 2.1625 - categorical_accuracy: 0.1869 - val_loss: 2.2134 - val_categorical_accuracy: 0.1797 - 183s/epoch - 162ms/step
Epoch 6/10

Epoch 00006: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 162s - loss: 2.1487 - categorical_accuracy: 0.1897 - val_loss: 2.2175 - val_categorical_accuracy: 0.1776 - 162s/epoch - 144ms/step
Epoch 7/10

Epoch 00007: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 156s - loss: 2.1336 - categorical_accuracy: 0.1941 - val_loss: 2.2242 - val_categorical_accuracy: 0.1719 - 156s/epoch - 139ms/step
Epoch 8/10

Epoch 00008: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 159s - loss: 2.1174 - categorical_accuracy: 0.2004 - val_loss: 2.2311 - val_categorical_accuracy: 0.1754 - 159s/epoch - 141ms/step
Epoch 9/10

Epoch 00009: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 161s - loss: 2.1041 - categorical_accuracy: 0.2060 - val_loss: 2.2370 - val_categorical_accuracy: 0.1660 - 161s/epoch - 144ms/step
Epoch 10/10

Epoch 00010: val_categorical_accuracy did not improve from 0.18225
1125/1125 - 161s - loss: 2.0882 - categorical_accuracy: 0.2082 - val_loss: 2.2441 - val_categorical_accuracy: 0.1723 - 161s/epoch - 143ms/step
