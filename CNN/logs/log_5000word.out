My first sbatch script!
Load data...
Adjusting sequence length for actual size
x_train shape: (4500, 2552)
x_test shape: (500, 2552)
Vocabulary Size: 25155
Model type is CNN-rand
2022-01-05 06:55:12.849175: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-01-05 06:55:13.502761: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 15397 MB memory:  -> device: 0, name: Tesla P100-PCIE-16GB, pci bus id: 0000:d8:00.0, compute capability: 6.0
Model: "model"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to                     
==================================================================================================
 input_1 (InputLayer)           [(None, 2552)]       0           []                               
                                                                                                  
 embedding (Embedding)          (None, 2552, 50)     1257750     ['input_1[0][0]']                
                                                                                                  
 dropout (Dropout)              (None, 2552, 50)     0           ['embedding[0][0]']              
                                                                                                  
 conv1d (Conv1D)                (None, 2550, 10)     1510        ['dropout[0][0]']                
                                                                                                  
 conv1d_1 (Conv1D)              (None, 2545, 10)     4010        ['dropout[0][0]']                
                                                                                                  
 max_pooling1d (MaxPooling1D)   (None, 1275, 10)     0           ['conv1d[0][0]']                 
                                                                                                  
 max_pooling1d_1 (MaxPooling1D)  (None, 1272, 10)    0           ['conv1d_1[0][0]']               
                                                                                                  
 flatten (Flatten)              (None, 12750)        0           ['max_pooling1d[0][0]']          
                                                                                                  
 flatten_1 (Flatten)            (None, 12720)        0           ['max_pooling1d_1[0][0]']        
                                                                                                  
 concatenate (Concatenate)      (None, 25470)        0           ['flatten[0][0]',                
                                                                  'flatten_1[0][0]']              
                                                                                                  
 dropout_1 (Dropout)            (None, 25470)        0           ['concatenate[0][0]']            
                                                                                                  
 dense (Dense)                  (None, 50)           1273550     ['dropout_1[0][0]']              
                                                                                                  
 dense_1 (Dense)                (None, 10)           510         ['dense[0][0]']                  
                                                                                                  
==================================================================================================
Total params: 2,537,330
Trainable params: 2,537,330
Non-trainable params: 0
__________________________________________________________________________________________________
Epoch 1/10
2022-01-05 06:55:15.191577: I tensorflow/stream_executor/cuda/cuda_dnn.cc:366] Loaded cuDNN version 8200

Epoch 00001: val_categorical_accuracy improved from -inf to 0.21600, saving model to ./model/best
2022-01-05 06:55:25.050499: W tensorflow/python/util/util.cc:368] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
71/71 - 12s - loss: 2.1769 - categorical_accuracy: 0.2073 - val_loss: 2.2403 - val_categorical_accuracy: 0.2160 - 12s/epoch - 168ms/step
Epoch 2/10

Epoch 00002: val_categorical_accuracy did not improve from 0.21600
71/71 - 2s - loss: 2.1632 - categorical_accuracy: 0.2044 - val_loss: 2.2187 - val_categorical_accuracy: 0.2160 - 2s/epoch - 27ms/step
Epoch 3/10

Epoch 00003: val_categorical_accuracy did not improve from 0.21600
71/71 - 2s - loss: 2.1460 - categorical_accuracy: 0.2193 - val_loss: 2.1823 - val_categorical_accuracy: 0.2160 - 2s/epoch - 25ms/step
Epoch 4/10

Epoch 00004: val_categorical_accuracy improved from 0.21600 to 0.21800, saving model to ./model/best
71/71 - 5s - loss: 2.1285 - categorical_accuracy: 0.2238 - val_loss: 2.1859 - val_categorical_accuracy: 0.2180 - 5s/epoch - 66ms/step
Epoch 5/10

Epoch 00005: val_categorical_accuracy did not improve from 0.21800
71/71 - 2s - loss: 2.1092 - categorical_accuracy: 0.2344 - val_loss: 2.1867 - val_categorical_accuracy: 0.2120 - 2s/epoch - 26ms/step
Epoch 6/10

Epoch 00006: val_categorical_accuracy did not improve from 0.21800
71/71 - 2s - loss: 2.0755 - categorical_accuracy: 0.2462 - val_loss: 2.1848 - val_categorical_accuracy: 0.1880 - 2s/epoch - 25ms/step
Epoch 7/10

Epoch 00007: val_categorical_accuracy did not improve from 0.21800
71/71 - 2s - loss: 2.0198 - categorical_accuracy: 0.2762 - val_loss: 2.1738 - val_categorical_accuracy: 0.1980 - 2s/epoch - 25ms/step
Epoch 8/10

Epoch 00008: val_categorical_accuracy did not improve from 0.21800
71/71 - 2s - loss: 1.9591 - categorical_accuracy: 0.3053 - val_loss: 2.1877 - val_categorical_accuracy: 0.1900 - 2s/epoch - 24ms/step
Epoch 9/10

Epoch 00009: val_categorical_accuracy did not improve from 0.21800
71/71 - 2s - loss: 1.8879 - categorical_accuracy: 0.3284 - val_loss: 2.2119 - val_categorical_accuracy: 0.1780 - 2s/epoch - 24ms/step
Epoch 10/10

Epoch 00010: val_categorical_accuracy did not improve from 0.21800
71/71 - 2s - loss: 1.8023 - categorical_accuracy: 0.3640 - val_loss: 2.2219 - val_categorical_accuracy: 0.1800 - 2s/epoch - 25ms/step
